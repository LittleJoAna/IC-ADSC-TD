1. Введение
	1.1 Кратко о C, зачем использовать С
	1.2 Установка среды разработки в ОС Windows
		1.2.1 mingw + блокнот
		1.2.2 CodeBlocks
		1.2.3 Eclipse+mingw
		1.2.4 QTCreator
	1.3 Установка среды разработки в ОС Linux, например Ubuntu
		1.3.1 gcc + блокнот
		1.3.2 CodeBlocks + gcc
		1.3.3 Eclipse+gcc
		1.3.4 QTCreator
	1.4 Установка среды разработки в ОС Mac OS
		1.4.1 gcc + блокнот
		1.4.2 CodeBlocks + gcc
		1.4.3 Eclipse+gcc
		1.4.4 QTCreator
2. Знакомство
	2.1. Понимание алгоритма(немного истории-аль-Хорезми)
		2.1.1. Свойства алгоритмов
		2.1.2. Способы записи алгоритмов
	2.2. Понимание структур данных
		2.2.1. Элементы динамического множества(структур данных)
		2.2.2. Операции над динамическими множествами(структурами данных)
	2.3. Cтpyктypы данных
		2.3.1. Графы
		2.3.2. Хеш-таблицы
	2.4. Инструменты визуализации алгоритмов и структур данных
		2.4.1. Draw.io
		2.4.2. Umbrello
		2.4.3. Eclipse + Papyrus
3.Для чего необходимо знать асимптотическую сложность алгоритма
	3.1. Асимптотическая сложность алгоритма
	3.2. Оценка времени выполнения алгоритмов(Асимптотическая нотация)
		3.2.1. O Большое(O) - худшее время выполнения алгоритмов
		3.2.2. Тета Большое (Θ) - среднее время выполнения
		3.2.3. Омега Большое (Ω) - лучшее время выполнения алгоритмов
	3.3. Дополнительные материалы.
4. Простые алгоритмы
	4.1. Линейный алгоритм.
	4.2. Ветвящийся алгоритм, или разветвленный.
	4.3. Циклический.
	4.4. Алгоритм Эвклида
	4.5. Ускоренный алгоритм Эвклида
	4.6. Решето Эратосфена
5. Рекурсия, рекурсивные алгоритмы
	5.1. Треугольные числа
	5.2. Факториал
	5.3. Числа Фибоначчи
	5.4. Анаграммы
	5.5. Ханойская башня
	5.6. Поиск с возвратом
		5.6.1. Задача о 8 ферзях
		5.6.2. Обход шахматной доски конем
        5.7. Поиск всех возможных вариантов
		5.7.1. Поиск наибольшей общей подпоследовательности
		5.7.2. Поиск маршрутов шахматного короля
6. Массивы
	6.1. Виды массивов
		6.1.1. Одномерные массивы
		6.1.2. Многомерные массивы
			6.1.2.1. Матрицы
			6.1.2.2. Треугольные массивы
	6.2. Простые сортировки
		6.2.1. Пузырьковая сортировка
		6.2.2. Шейкерная сортировка
		6.2.3. Сортировка методом вставки
		6.2.4. Сортировка методом выбора
	6.3. Алгоритмы поиска
		6.3.1. Линейный поиск
		6.3.2. Поиск методом половинного деления
		6.3.3. Интерполяционный поиск
	6.4. Сложные сортировки
		6.4.1. Быстрая сортировка/Сортировка Хоара(Quick sort)
		6.4.2. Сортировка слиянием(Merge sort)
		6.4.3. Сортировка подсчётом(Counting sort)
		6.4.4. Алгоритм со списком(pigeonhole sorting)
		6.4.5. Блочная сортировка
		6.4.6. Улучшенная сортировка вставками (Сортировка Шелла)
7. Стеки, очереди и списки
	7.1. Стеки и очереди
		7.1.1. Стеки
			7.1.1.1. Создание стека с использованием массива
		7.1.2. Очереди
			7.1.2.1. Реализация очереди через массив
		7.1.3. Очереди по приоритету
		7.1.4. Двусторонние очереди (деки)
			7.1.4.1. Реализация двухсторонней очереди
	7.2. Динамические структуры данных
	7.3. Списки
		7.3.1. Односвязные списки
		7.3.2. Двусвязные списки
			7.3.2.1. Стек на основе односвязного списка
		7.3.3. Циклические списки
8. Деревья
	8.1. Виды деревьев
		8.1.1. Двоичное дерево поиска
			8.1.1.1. Хранение двоичного дерева в массиве
		8.1.2. Красно-чёрные деревья
			8.1.2.1. Свойства красно-чёрных деревьев
				8.1.2.1.1. Лемма
			8.1.2.2. Повороты
			8.1.2.3. Вставка
			8.1.2.4. Удаление
		8.1.3. Деревья 2-3-4
			8.1.3.1. Почему деревья 2-3-4 так называются?
			8.1.3.2. Структура дерева 2-3-4
			8.1.3.3. Поиск в дереве 2-3-4
			8.1.3.4. Вставка
			8.1.3.5. Разбиение узлов
			8.1.3.6. Разбиение корневого узла
			8.1.3.7. Разбиение при перемещении вниз
		8.1.4. Деревья поиска
	8.2. Использование динамических структур данных
	8.3. Скобочная запись дерева
	8.4. Рекурсивный обход двоичного дерева
	8.5. Построение сбалансированного дерева
	8.6. Бинарный поиск в дереве
		8.6.1. Что такое бинарное дерево поиска
		8.6.2. Работа с бинарным деревом поиска
		8.6.3. Вставка и удаление
		8.6.4. Случайное построение бинарных деревьев поиска
	8.7. Пирамидальная сортировка (Heap sort)
9. Графы
	9.1. Виды графов
		9.1.1. Простые графы, понятие смежности
		9.1.2. Направленные графы
		9.1.3. Взвешенные графы
	9.2. Обход графа в глубину
	9.3. Обход графа в ширину
	9.4. «​Жадные» алгоритмы
	9.5. Кратчайшие маршруты
		9.5.1. Алгоритм Флойда-Уоршелла
10. Хеш-таблицы
	10.1. Хеширование
	10.2. Хеш-функции
	10.3. MD5
	10.4. Построение таблиц
	10.5. Открытая адресация
11. Криптография(Стивенс Род)
	11.1. Перестановочные шифры
		11.1.1. Перестановка строк/столбцов
		11.1.2. Маршрутные шифры
	11.2. Шифры подстановки
		11.2.1. Шифр Цезаря
		11.2.2. Шифр Виженера
		11.2.3. Простая подстановка
		11.2.4. Схема одноразовых блокнотов
	11.3. Блочные шифры
		11.3.1. Подстановочно-перестановочные сети
		11.3.2. Шифр Фейстеля
	11.4. Примеры шифрования используемые в мире ИТ
		11.4.1. AES
		11.4.2. RSA
		11.4.3. MD5
		11.4.4. SHA1
		11.4.5. SHA256
		11.4.6. SSL
		11.4.7. TLS
